<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>eu.europa.ec.fisheries.uvms.docker</groupId>
		<artifactId>uvms-docker</artifactId>
		<version>3.40.2.w18-ERS-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<groupId>eu.europa.ec.fisheries.uvms.docker</groupId>
	<artifactId>uvms-docker-wildfly-unionvms</artifactId>
	<version>3.40.2.w18-ERS-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>uvms-docker-wildfly-unionvms</name>

	<properties>
		<docker.dependency.skip>true</docker.dependency.skip>
	</properties>

	<repositories>
		<repository>
			<id>focus-repo</id>
			<name>Focus nexus repository</name>
			<url>http://nexus.focus.fish/nexus/</url>
		</repository>
	</repositories>

	<distributionManagement>
		<repository>
			<id>focus-releases</id>
			<name>UnionVms Repository</name>
			<url>http://nexus.focus.fish/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>focus-snapshots</id>
			<name>UnionVms Snapshot Repository</name>
			<url>http://nexus.focus.fish/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencies>
		<!-- Admin -->
		<dependency>
			<groupId>io.hawt</groupId>
			<artifactId>hawtio-wildfly</artifactId>
			<type>war</type>
			<version>${unionvms.project.hawtio-wildfly}</version>
		</dependency>

		<!-- frontend modules -->
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms</groupId>
			<artifactId>unionvms-web</artifactId>
			<type>war</type>
		</dependency>

        <dependency>
            <groupId>eu.europa.ec.fisheries.uvms</groupId>
            <artifactId>vms-web</artifactId>
            <type>war</type>
        </dependency>

		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.mapfish.print-servlet-overlay</groupId>
			<artifactId>print-servlet</artifactId>
			<type>war</type>
		</dependency>
		
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.geoserver.web.overlay</groupId>			
			<artifactId>gs-web-app</artifactId>
			<type>war</type>
		</dependency>
		

		<!-- app modules -->
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.mdrSwe</groupId>
			<artifactId>mdrSwe-module</artifactId>
			<type>ear</type>
		</dependency>

		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.asset</groupId>
			<artifactId>asset-module</artifactId>
			<type>ear</type>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.audit</groupId>
			<artifactId>audit-module</artifactId>
			<type>ear</type>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.config</groupId>
			<artifactId>config-module</artifactId>
			<type>ear</type>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.exchange</groupId>
			<artifactId>exchange-module</artifactId>
			<type>ear</type>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.movement</groupId>
			<artifactId>movement-module</artifactId>
			<type>ear</type>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.activity</groupId>
			<artifactId>activity-module</artifactId>
			<type>ear</type>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.movement-rules</groupId>
			<artifactId>movement-rules-module</artifactId>
			<type>ear</type>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.spatial</groupId>
			<artifactId>spatial-module</artifactId>
			<type>ear</type>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.spatialSwe</groupId>
			<artifactId>spatialSwe-module</artifactId>
			<type>ear</type>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.user</groupId>
			<artifactId>user-module</artifactId>
			<type>ear</type>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.reporting</groupId>
			<artifactId>reporting-module</artifactId>
			<type>ear</type>
		</dependency>

		<!-- plugin modules -->
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.plugins</groupId>
			<artifactId>inmarsat-module</artifactId>
  			<type>ear</type>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.plugins</groupId>
			<artifactId>naf-module</artifactId>
			<type>ear</type>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.plugins</groupId>
			<artifactId>flux-movement-plugin-module</artifactId>
			<type>ear</type>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.plugins</groupId>
			<artifactId>flux-vesselposition-rest-module</artifactId>
			<type>ear</type>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.25.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<copyPom>false</copyPom>
							<outputDirectory>${project.basedir}/target/dockerfile/deployments</outputDirectory>
							<excludeTypes>pom</excludeTypes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>filter-resources</id>
						<goals>
							<goal>resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/target/dockerfile</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/docker</directory>
									<filtering>false</filtering>
									<excludes>
										<exclude>Dockerfile</exclude>
										<exclude>**/jboss-all.xml</exclude>
									</excludes>
								</resource>
								<resource>
									<directory>${project.basedir}/src/main/docker/</directory>
									<filtering>true</filtering>
									<includes>
										<include>Dockerfile</include>
										<include>**/jboss-all.xml</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
					<finalName>${project.artifactId}</finalName>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<goals>
					<goal>deploy-file</goal>
				</goals>
				<configuration>
					<packaging>zip</packaging>
					<generatePom>true</generatePom>
					<artifactId>${project.artifactId}</artifactId>
					<groupId>${project.groupId}</groupId>
					<version>${project.version}</version>
					<file>target/${project.artifactId}.zip</file>
				</configuration>
			</plugin>												
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<configuration>
							<tasks>
								<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
								
								<if>
								    <not><equals arg1="${docker.dependency.skip}" arg2="true" /></not>
								    <then>
									<echo message="Modify ear/war:s to define startup order!" />

									<jar destfile="${project.basedir}/target/dockerfile/deployments/user-module-${unionvms.project.user.module}.ear" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/user" includes="*.xml" prefix="META-INF" />
									</jar>
	
									<jar destfile="${project.basedir}/target/dockerfile/deployments/config-module-${unionvms.project.config.module}.ear" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/config" includes="*.xml" prefix="META-INF" />
									</jar>

									<jar destfile="${project.basedir}/target/dockerfile/deployments/reporting-module-${unionvms.project.reporting.module}.ear" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/reporting" includes="*.xml" prefix="META-INF" />
									</jar>

									<jar destfile="${project.basedir}/target/dockerfile/deployments/movement-rules-module-${unionvms.project.movementrules.module}.ear" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/movement-rules" includes="*.xml" prefix="META-INF" />
									</jar>

									<jar destfile="${project.basedir}/target/dockerfile/deployments/spatial-module-${unionvms.project.spatial.module}.ear" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/spatial" includes="*.xml" prefix="META-INF" />
									</jar>

									<jar destfile="${project.basedir}/target/dockerfile/deployments/spatialSwe-module-${unionvms.project.spatialSwe.module}.ear" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/spatial" includes="*.xml" prefix="META-INF" />
									</jar>
	
									<jar destfile="${project.basedir}/target/dockerfile/deployments/movement-module-${unionvms.project.movement.module}.ear" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/movement" includes="*.xml" prefix="META-INF" />
									</jar>

									<jar destfile="${project.basedir}/target/dockerfile/deployments/activity-module-${unionvms.project.activity.module}.ear" update="true">
									 	<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/activity" includes="*.xml" prefix="META-INF" />
									</jar>

									<jar destfile="${project.basedir}/target/dockerfile/deployments/asset-module-${unionvms.project.asset.module}.ear" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/asset" includes="*.xml" prefix="META-INF" />
									</jar>
	
									<jar destfile="${project.basedir}/target/dockerfile/deployments/audit-module-${unionvms.project.audit.module}.ear" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/audit" includes="*.xml" prefix="META-INF" />
									</jar>
	
									<jar destfile="${project.basedir}/target/dockerfile/deployments/exchange-module-${unionvms.project.exchange.module}.ear" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/exchange" includes="*.xml" prefix="META-INF" />
									</jar>

									<jar destfile="${project.basedir}/target/dockerfile/deployments/gs-web-app-${unionvms.project.geoserver.version}.war" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/web-app" includes="*.xml" prefix="WEB-INF" />
									</jar>
		
									<jar destfile="${project.basedir}/target/dockerfile/deployments/print-servlet-${unionvms.project.mapfishprint.version}.war" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/web-app" includes="*.xml" prefix="WEB-INF" />
									</jar>
									
									<jar destfile="${project.basedir}/target/dockerfile/deployments/inmarsat-module-${unionvms.project.plugins.inmarsat}.ear" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/plugins" includes="*.xml" prefix="META-INF" />
									</jar>

									<jar destfile="${project.basedir}/target/dockerfile/deployments/naf-module-${unionvms.project.plugins.naf}.ear" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/plugins" includes="*.xml" prefix="META-INF" />
									</jar>

									<jar destfile="${project.basedir}/target/dockerfile/deployments/flux-movement-plugin-module-${unionvms.project.plugins.flux}.ear" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/plugins" includes="*.xml" prefix="META-INF" />
									</jar>

									<jar destfile="${project.basedir}/target/dockerfile/deployments/unionvms-web-${unionvms.project.unionvms.web.version}.war" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/web-app" includes="*.xml" prefix="WEB-INF" />
									</jar>

									<jar destfile="${project.basedir}/target/dockerfile/deployments/mdrSwe-module-${unionvms.project.mdrSwe.module}.ear" update="true">
										<zipfileset dir="${project.basedir}/target/dockerfile/jboss-deployment/mdrSwe" includes="*.xml" prefix="META-INF" />
									</jar>
								</then>
								<else>
								        <echo message="Ignore dependency order at startup, no ear/war:s is modified " />
								</else>
							</if>
								
							<move file="${project.basedir}/target/dockerfile/deployments/print-servlet-${unionvms.project.mapfishprint.version}.war" tofile="${project.basedir}/target/dockerfile/deployments/mapfish-print.war" />
							<move file="${project.basedir}/target/dockerfile/deployments/gs-web-app-${unionvms.project.geoserver.version}.war" tofile="${project.basedir}/target/dockerfile/deployments/geoserver.war" />
							<move file="${project.basedir}/target/dockerfile/deployments/hawtio-wildfly-${unionvms.project.hawtio-wildfly}.war" tofile="${project.basedir}/target/dockerfile/deployments/hawtio-wildfly.war" />

							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
				  <dependency>
				    <groupId>ant-contrib</groupId>
				    <artifactId>ant-contrib</artifactId>
				    <version>1.0b3</version>
				    <exclusions>
				      <exclusion>
				        <groupId>ant</groupId>
				        <artifactId>ant</artifactId>
				      </exclusion>
				    </exclusions>
				  </dependency>
				  <dependency>
				    <groupId>org.apache.ant</groupId>
				    <artifactId>ant-nodeps</artifactId>
				    <version>1.8.1</version>
				  </dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>package</id>
						<phase>test</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>verifyallstopped</id>
						<phase>compile</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
					<execution>
						<id>stoppall</id>
						<phase>install</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<images>
						<image>
							<name>uvms/wildfly-unionvms:${project.version}</name>
							<build>
								<dockerFileDir>${project.basedir}/target/dockerfile</dockerFileDir>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>push-docker</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>docker:push</id>
								<phase>install</phase>
								<goals>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<scm>
		<tag>HEAD</tag>
	</scm>
</project>
