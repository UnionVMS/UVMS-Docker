{
	"info": {
		"name": "Spatial",
		"_postman_id": "4b856501-e86a-2565-3c93-c021f96558f7",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "01 Area-Datasets",
			"item": [
				{
					"name": "01 authenticate usm_admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"authenticated is true\"] = data.authenticated === true;",
									"",
									"postman.setEnvironmentVariable(\"token\", data.jwtoken);",
									"",
									"tests[\"environment token is \" + environment.token] = environment.token === data.jwtoken;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"usm_admin\",\n   \"password\": \"password\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/authenticate"
					},
					"response": []
				},
				{
					"name": "01 get roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody).results;",
									"",
									"",
									"for (var i = 0; i < data.length; i++) {",
									"    var feature = data[i];",
									"    ",
									"    if (feature.name === 'rep_power_role') {",
									"        postman.setGlobalVariable(\"rep_power_role_id\", feature.roleId);",
									"        ",
									"    } else if (feature.name === 'rep_share_role') {",
									"        postman.setGlobalVariable(\"rep_share_role_id\", feature.roleId);",
									"        ",
									"    } else if (feature.name === 'rep_private_role') {",
									"        postman.setGlobalVariable(\"rep_private_role_id\", feature.roleId);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "roleName",
								"value": "USM-UserManager"
							},
							{
								"key": "scopeName",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"rep_share\",\n   \"password\": \"abcd-1234\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/roles"
					},
					"response": []
				},
				{
					"name": "01 get features",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody).results;",
									"",
									"var featureIDs = [];",
									"",
									"for (var i = 0; i < data.length; i++) {",
									"    if((data[i].name !== \"MANAGE_ALL_REPORTS\") && (data[i].name !== \"MANAGE_ANY_USER_AREA\")){",
									"        featureIDs.push(data[i].featureId);",
									"    }",
									"}",
									"",
									"postman.setGlobalVariable(\"features\",  featureIDs.join());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "roleName",
								"value": "USM-UserManager"
							},
							{
								"key": "scopeName",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"rep_share\",\n   \"password\": \"abcd-1234\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/applications/features"
					},
					"response": []
				},
				{
					"name": "01 edit_rep_power_role_features",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody).results;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "roleName",
								"value": "USM-UserManager"
							},
							{
								"key": "scopeName",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"features\": [{{features}}],\r\n\t\"roleId\": {{rep_power_role_id}},\r\n\t\"status\": \"E\",\r\n\t\"name\": \"rep_power_role\"\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/roles"
					},
					"response": []
				},
				{
					"name": "01 edit_rep_share_role_features",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody).results;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "roleName",
								"value": "USM-UserManager"
							},
							{
								"key": "scopeName",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"features\": [{{features}}],\r\n\t\"roleId\": {{rep_share_role_id}},\r\n\t\"status\": \"E\",\r\n\t\"name\": \"rep_share_role\"\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/roles"
					},
					"response": []
				},
				{
					"name": "01 get datasets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody).results;",
									"",
									"var datasetsIDs = [];",
									"",
									"for (var i = 0; i < data.length; i++) {",
									"    datasetsIDs.push(data[i].datasetId);",
									"}",
									"",
									"postman.setGlobalVariable(\"dataSets\",  datasetsIDs.join());",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "roleName",
								"value": "USM-UserManager"
							},
							{
								"key": "scopeName",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"rep_share\",\n   \"password\": \"abcd-1234\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/scopes/datasets"
					},
					"response": []
				},
				{
					"name": "01 authenticate rep_power",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"authenticated is true\"] = data.authenticated === true;",
									"",
									"postman.setEnvironmentVariable(\"token\", data.jwtoken);",
									"",
									"tests[\"environment token is \" + environment.token] = environment.token === data.jwtoken;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"rep_power\",\n   \"password\": \"abcd-1234\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/authenticate"
					},
					"response": []
				},
				{
					"name": "01 Create User Area",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"userAreaId\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "01 Get User Area",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "853618ef-b5c3-408a-bb04-0c4834d44c52",
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"    ",
									"    tests[\"Area name correct\"] = area.name === \"Name-\".concat(globals.myRnd);",
									"    tests[\"Area description correct\"] = area.areaDesc === \"Description \".concat(globals.myRnd);",
									"    tests[\"Area dataset correct\"] = area.datasetName === \"dataset\".concat(globals.myRnd);",
									"    // tests[\"Area area type correct\"] = area.areaType === \"USERAREA\";",
									"    tests[\"Area group correct\"] = area.subType === \"Group\".concat(globals.myRnd);",
									"    tests[\"Area scopeSelection correct\"] = area.scopeSelection[0] === \"DG_MARE\";",
									"    tests[\"Area enabled\"] = area.enabled === true;",
									"    ",
									"    tests[\"Area startDate\"] = area.startDate === \"2017-04-20T08:55:17\";",
									"    tests[\"Area endDate\"] = area.endDate === \"2017-04-29T08:55:17\";",
									"    tests[\"Area extent\"] = area.extent === \"POLYGON ((-37.28693406080001 68.12616370194141, -37.28693406080001 74.908058702499, -3.341753524316978 74.908058702499, -3.341753524316978 68.12616370194141, -37.28693406080001 68.12616370194141))\";",
									"    ",
									"",
									"    ",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{userAreaId}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "01 authenticate usm_admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"authenticated is true\"] = data.authenticated === true;",
									"",
									"postman.setEnvironmentVariable(\"token\", data.jwtoken);",
									"",
									"tests[\"environment token is \" + environment.token] = environment.token === data.jwtoken;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"usm_admin\",\n   \"password\": \"password\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/authenticate"
					},
					"response": []
				},
				{
					"name": "01 GetDatasets - Verify new dataset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"try{",
									"var datasets = JSON.parse(responseBody).results;",
									"",
									"var found = false;",
									"for (var i = 0; i < datasets.length; i++) {",
									"    ds = datasets[i];",
									"    ",
									"    if(ds.name === \"dataset\".concat(globals.myRnd)){",
									"        found = true;",
									"        ",
									"        tests[\"Dataset category\"] = (ds.category === \"Area Restriction\");",
									"        tests[\"Dataset discriminator\"] = (ds.discriminator === \"USERAREA_\".concat(globals.userAreaId));",
									"        tests[\"Dataset application\"] = (ds.application === \"Spatial\");",
									"        tests[\"Dataset description\"] = (ds.description === \"Automatically created by Spatial module dataset.\");",
									"    }",
									"    ",
									"    tests[\"Dataset created\"] = found;",
									"}",
									"",
									"",
									"} catch(e){tests['JSON format'] = false; }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "roleName",
								"value": "USM-UserManager"
							},
							{
								"key": "scopeName",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"rep_share\",\n   \"password\": \"abcd-1234\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/scopes/datasets"
					},
					"response": []
				},
				{
					"name": "01 authenticate rep_power",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"authenticated is true\"] = data.authenticated === true;",
									"",
									"postman.setEnvironmentVariable(\"token\", data.jwtoken);",
									"",
									"tests[\"environment token is \" + environment.token] = environment.token === data.jwtoken;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"rep_power\",\n   \"password\": \"abcd-1234\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/authenticate"
					},
					"response": []
				},
				{
					"name": "01 Edit User Area Dataset",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{userAreaId}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "01 Get User Area copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"",
									"    tests[\"Area dataset correct\"] = area.datasetName === \"newDataset\".concat(globals.myRnd);",
									"",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{userAreaId}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "01 authenticate usm_admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"authenticated is true\"] = data.authenticated === true;",
									"",
									"postman.setEnvironmentVariable(\"token\", data.jwtoken);",
									"",
									"tests[\"environment token is \" + environment.token] = environment.token === data.jwtoken;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"usm_admin\",\n   \"password\": \"password\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/authenticate"
					},
					"response": []
				},
				{
					"name": "01 GetDatasets - Verify new dataset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"try{",
									"var datasets = JSON.parse(responseBody).results;",
									"",
									"var found = false;",
									"for (var i = 0; i < datasets.length; i++) {",
									"    ds = datasets[i];",
									"    ",
									"    if(ds.name === \"newDataset\".concat(globals.myRnd)){",
									"        found = true;",
									"        ",
									"        tests[\"Dataset category\"] = (ds.category === \"Area Restriction\");",
									"        tests[\"Dataset discriminator\"] = (ds.discriminator === \"USERAREA_\".concat(globals.userAreaId));",
									"        tests[\"Dataset application\"] = (ds.application === \"Spatial\");",
									"        tests[\"Dataset description\"] = (ds.description === \"Automatically created by Spatial module dataset.\");",
									"    }",
									"    ",
									"    tests[\"Dataset created\"] = found;",
									"}",
									"",
									"",
									"} catch(e){tests['JSON format'] = false; }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "roleName",
								"value": "USM-UserManager"
							},
							{
								"key": "scopeName",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"rep_share\",\n   \"password\": \"abcd-1234\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/scopes/datasets"
					},
					"response": []
				}
			]
		},
		{
			"name": "02 Area-Visibility - ChangeUserChangeScope",
			"item": [
				{
					"name": "02 authenticate rep_power",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"authenticated is true\"] = data.authenticated === true;",
									"",
									"postman.setEnvironmentVariable(\"token\", data.jwtoken);",
									"",
									"tests[\"environment token is \" + environment.token] = environment.token === data.jwtoken;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"rep_power\",\n   \"password\": \"abcd-1234\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/authenticate"
					},
					"response": []
				},
				{
					"name": "02 Create User Area - SharedEC",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"UAID_EC\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"EC\"],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "02 Get User Area - SharedEC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"    ",
									"",
									"    postman.setGlobalVariable(\"UAGROUP_EC\", area.subType);",
									"    ",
									"    tests[\"Area scopeSelection correct\"] = area.scopeSelection[0] === \"EC\";",
									"",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_EC}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "02 Create User Area - Private",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"UAID_Private\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "02 Get User Area - Private",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"    ",
									"",
									"    postman.setGlobalVariable(\"UAGROUP_Private\", area.subType);",
									"    ",
									"    tests[\"Area scopeSelection correct\"] = (area.scopeSelection.length == 0);",
									"",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_Private}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "02 Create User Area - MultipleScopes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"UAID_MULTIPLE\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"EC\", \"DG_MARE\"],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "02 Get User Area - MultipleScopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"    ",
									"",
									"    postman.setGlobalVariable(\"UAGROUP_MULTIPLE\", area.subType);",
									"    ",
									"    tests[\"Area scopeSelection correct\"] = (area.scopeSelection.length == 2);",
									"",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_MULTIPLE}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "02 Create User Area - InvalidScope",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"UAID_INVALIDSCOPE\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"INVALIDSCOPE\", \"FRA\"],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "02 Get User Area - InvalidScopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"    ",
									"",
									"    postman.setGlobalVariable(\"UAGROUP_INVALIDSCOPE\", area.subType);",
									"    ",
									"    tests[\"Area scopeSelection correct\"] = (area.scopeSelection.length == 2);",
									"    tests[\"Area scopeSelection name1\"] = area.scopeSelection.indexOf('INVALIDSCOPE')>-1;",
									"    tests[\"Area scopeSelection name2\"] = area.scopeSelection.indexOf('FRA')>-1;",
									"",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_INVALIDSCOPE}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "02 authenticate rep_share",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"authenticated is true\"] = data.authenticated === true;",
									"",
									"postman.setEnvironmentVariable(\"token\", data.jwtoken);",
									"",
									"tests[\"environment token is \" + environment.token] = environment.token === data.jwtoken;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"rep_share\",\n   \"password\": \"abcd-1234\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/authenticate"
					},
					"response": []
				},
				{
					"name": "02 DG_Mare - Get User Area - SharedEC",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "250a95f5-d1e9-4dc2-98a3-c68ffd01a993",
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody).data;",
									"    tests[\"Area ID in response\"] = jsonData.gid == globals.UAID_EC;",
									"    ",
									"}",
									"catch(e) {tests[\"Body format error\"] = false; } ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_EC}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "02 DG_MARE - Get User Area - Private",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c11353e9-83bd-4f8d-be14-d13da13f006d",
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"",
									"tests[\"Area should not be in response\"] = responseBody.indexOf(globals.UAID_Private) <0",
									"",
									"}",
									"catch(e) {tests[\"Body format error\"] = false; } ",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_Private}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "02 DG_MARE - Get User Area - MultipleScopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "30b7b8f5-8e45-4cfc-8c83-71e6162cdc95",
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody).data;",
									"    tests[\"Area ID in response\"] = jsonData.gid == globals.UAID_MULTIPLE;",
									"    ",
									"}",
									"catch(e) {tests[\"Body format error\"] = false; } ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_MULTIPLE}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "02 DG_MARE - Get User Area - InvalidScopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4e2491b7-9283-4659-8c32-1dbba01a925f",
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"   ",
									"   tests[\"Area should not be in response\"] = responseBody.indexOf(globals.UAID_INVALIDSCOPE) <0",
									"    ",
									"}",
									"catch(e) {tests[\"Body format error\"] = false; } ",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_INVALIDSCOPE}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "02 Get User Area List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f20283f2-f679-48d8-b12a-e6f6a330af2e",
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        ",
									"        if(areas[i].gid == globals.UAID_EC){",
									"            found_SharedEC = true;",
									"        }",
									"        if(areas[i].gid == globals.UAID_Private){",
									"            found_Private = true;",
									"        }",
									"        if(areas[i].gid == globals.UAID_MULTIPLE){",
									"            found_Mscopes = true;",
									"        }",
									"        if(areas[i].gid == globals.UAID_INVALIDSCOPE){",
									"            found_InvalidScopes = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"Shared EC area in list\"] = found_SharedEC;",
									"    tests[\"Private in list\"] = !found_Private;",
									"    tests[\"Multiple Scopes in list\"] = found_Mscopes;",
									"    tests[\"Invalid scopes area in list\"] = !found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list"
					},
					"response": []
				},
				{
					"name": "02 Get User Area Group List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areaGroups = JSON.parse(responseBody).data;",
									"    ",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areaGroups.length; i++){",
									"        if(areaGroups[i] === globals.UAGROUP_EC){ found_SharedEC = true;   }",
									"        if(areaGroups[i] === globals.UAGROUP_Private){ found_Private = true;   }",
									"        if(areaGroups[i] === globals.UAGROUP_MULTIPLE){ found_Mscopes = true;   }",
									"        if(areaGroups[i] === globals.UAGROUP_INVALIDSCOPE){ found_InvalidScopes = true;   }",
									"    }",
									"    ",
									"    tests[\"User area group for SharedEC area in list \"] = !found_SharedEC;",
									"    tests[\"User area group for Private area in list\"] = !found_Private;",
									"    tests[\"User area group for MultipleScopes area  in list\"] = found_Mscopes;",
									"    tests[\"User area group  for InvalidScopes area in list\"] = !found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/types"
					},
					"response": []
				},
				{
					"name": "02 Get Areas In Group - SharedEC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody).data;",
									"    ",
									"    var found = false;",
									"    for(i=0; i<jsonData.length;i++){",
									"        if(jsonData[i].id == globals.UAID_EC){",
									"            found = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"Area visible\"] = !found;",
									"    ",
									"}",
									"catch(e) {tests[\"Body format error\"] = false; } ",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list/{{UAGROUP_EC}}"
					},
					"response": []
				},
				{
					"name": "02 Get Areas In Group - Private",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody).data;",
									"    ",
									"    var found = false;",
									"    for(i=0; i<jsonData.length;i++){",
									"        if(jsonData[i].id == globals.UAID_Private){",
									"            found = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"Area visible\"] = !found;",
									"    ",
									"}",
									"catch(e) {tests[\"Body format error\"] = false; }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list/{{UAGROUP_Private}}"
					},
					"response": []
				},
				{
					"name": "02 Get Areas In Group - MultipleS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code == 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    var found = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].id == globals.UAID_MULTIPLE){",
									"            found = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"User area in list\"] = found;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list/{{UAGROUP_MULTIPLE}}"
					},
					"response": []
				},
				{
					"name": "02 Get Areas In Group - InvalidS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody).data;",
									"    ",
									"    var found = false;",
									"    for(i=0; i<jsonData.length;i++){",
									"        if(jsonData[i].id == globals.UAID_INVALIDSCOPE){",
									"            found = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"Area visible\"] = !found;",
									"    ",
									"}",
									"catch(e) {tests[\"Body format error\"] = false; }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list/{{UAGROUP_INVALIDSCOPE}}"
					},
					"response": []
				},
				{
					"name": "02 Get User Areas Layer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data.idList;",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        ",
									"        if(areas[i] == globals.UAID_EC){",
									"            found_SharedEC = true;",
									"        }",
									"        if(areas[i] == globals.UAID_Private){",
									"            found_Private = true;",
									"        }",
									"        if(areas[i] == globals.UAID_MULTIPLE){",
									"            found_Mscopes = true;",
									"        }",
									"        if(areas[i] == globals.UAID_INVALIDSCOPE){",
									"            found_InvalidScopes = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"Shared EC area in list\"] = !found_SharedEC;",
									"    tests[\"Private in list\"] = !found_Private;",
									"    tests[\"Multiple Scopes in list\"] = found_Mscopes;",
									"    tests[\"Invalid scopes area in list\"] = !found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/layers"
					},
					"response": []
				},
				{
					"name": "02 FilterAreasByProperty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    ",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].gid == globals.UAID_EC){ found_SharedEC = true;   }",
									"        if(areas[i].gid == globals.UAID_Private){ found_Private = true;   }",
									"        if(areas[i].gid == globals.UAID_MULTIPLE){ found_Mscopes = true;   }",
									"        if(areas[i].gid == globals.UAID_INVALIDSCOPE){ found_InvalidScopes = true;   }",
									"    }",
									"",
									"    tests[\"User area SharedEC in list \"] = !found_SharedEC;",
									"    tests[\"User area Private in list\"] = !found_Private;",
									"    tests[\"User area MultipleScopes in list\"] = found_Mscopes;",
									"    tests[\"User area InvalidScopes in list\"] = !found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"filter\":\"name\"}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/byfilter"
					},
					"response": []
				},
				{
					"name": "02 FilterAreasByPoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    ",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].gid == globals.UAID_EC){ found_SharedEC = true;   }",
									"        if(areas[i].gid == globals.UAID_Private){ found_Private = true;   }",
									"        if(areas[i].gid == globals.UAID_MULTIPLE){ found_Mscopes = true;   }",
									"        if(areas[i].gid == globals.UAID_INVALIDSCOPE){ found_InvalidScopes = true;   }",
									"    }",
									"",
									"    tests[\"User area SharedEC in list \"] = !found_SharedEC;",
									"    tests[\"User area Private in list\"] = !found_Private;",
									"    tests[\"User area MultipleScopes in list\"] = found_Mscopes;",
									"    tests[\"User area InvalidScopes in list\"] = !found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"areaType\":\"USERAREA\",\n\t\"isGeom\":false,\n\t\"longitude\":-988742.9570800774,\n\t\"latitude\":11696861.913622377,\n\t\"crs\":\"3857\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/area/details"
					},
					"response": []
				},
				{
					"name": "02 Edit User Area Dataset-SharedEC",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code == 500;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{UAID_EC}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "02 Edit User Area Dataset-Private",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code == 500;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{UAID_Private}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "02 Edit User Area Dataset-MultiScope",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code === 500;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{UAID_MULTIPLE}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "02 Edit User Area Dataset-InvalidScope",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code == 500;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{UAID_INVALIDSCOPE}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "02 Delete Area - SharedEC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code == 500;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/{{UAID_EC}}"
					},
					"response": []
				},
				{
					"name": "02 Delete Area - Private",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code == 500;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/{{UAID_Private}}"
					},
					"response": []
				},
				{
					"name": "02 Delete Area - MultiScpoe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code == 500;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/{{UAID_MULTIPLE}}"
					},
					"response": []
				},
				{
					"name": "02 Delete Area - InvalidScope",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code == 500;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/{{UAID_INVALIDSCOPE}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "03 Area-Visibility - ChangeUserSameScope",
			"item": [
				{
					"name": "03 authenticate rep_power",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"authenticated is true\"] = data.authenticated === true;",
									"",
									"postman.setEnvironmentVariable(\"token\", data.jwtoken);",
									"",
									"tests[\"environment token is \" + environment.token] = environment.token === data.jwtoken;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"rep_power\",\n   \"password\": \"abcd-1234\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/authenticate"
					},
					"response": []
				},
				{
					"name": "03 Create User Area - SharedEC",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"UAID_EC\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"EC\"],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "03 Get User Area - SharedEC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"    ",
									"",
									"    postman.setGlobalVariable(\"UAGROUP_EC\", area.subType);",
									"    ",
									"    tests[\"Area scopeSelection correct\"] = area.scopeSelection[0] === \"EC\";",
									"",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_EC}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "03 Create User Area - Private",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"UAID_Private\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "03 Get User Area - Private",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"    ",
									"",
									"    postman.setGlobalVariable(\"UAGROUP_Private\", area.subType);",
									"    ",
									"    tests[\"Area scopeSelection correct\"] = (area.scopeSelection.length == 0);",
									"",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_Private}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "03 Create User Area - MultipleScopes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"UAID_MULTIPLE\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"EC\", \"DG_MARE\"],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "03 Get User Area - MultipleScopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"    ",
									"",
									"    postman.setGlobalVariable(\"UAGROUP_MULTIPLE\", area.subType);",
									"    ",
									"    tests[\"Area scopeSelection correct\"] = (area.scopeSelection.length == 2);",
									"",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_MULTIPLE}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "03 Create User Area - InvalidScope",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"UAID_INVALIDSCOPE\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"INVALIDSCOPE\", \"FRA\"],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "03 Get User Area - InvalidScopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"    ",
									"",
									"    postman.setGlobalVariable(\"UAGROUP_INVALIDSCOPE\", area.subType);",
									"    ",
									"    tests[\"Area scopeSelection correct\"] = (area.scopeSelection.length == 2);",
									"    tests[\"Area scopeSelection name1\"] = area.scopeSelection.indexOf('INVALIDSCOPE') >= 0;",
									"    tests[\"Area scopeSelection name2\"] = area.scopeSelection.indexOf('FRA') >= 0;",
									"",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_INVALIDSCOPE}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "03 authenticate rep_share",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"authenticated is true\"] = data.authenticated === true;",
									"",
									"postman.setEnvironmentVariable(\"token\", data.jwtoken);",
									"",
									"tests[\"environment token is \" + environment.token] = environment.token === data.jwtoken;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"rep_share\",\n   \"password\": \"abcd-1234\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/authenticate"
					},
					"response": []
				},
				{
					"name": "03 Get User Area - SharedEC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"",
									"    tests[\"Area scopeSelection correct\"] = area.scopeSelection[0] === \"EC\";",
									"",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_EC}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "03 Get User Area - Private",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"try{",
									"    var jsonData = JSON.parse(responseBody).data;",
									"    tests[\"Area ID in response\"] = jsonData.extent === null;",
									"}",
									"catch(e) {tests[\"Body format error\"] = false; }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_Private}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "03 Get User Area - MultipleScopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"",
									"    tests[\"Area scopeSelection correct\"] = (area.scopeSelection.length == 2);",
									"",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_MULTIPLE}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "03 Get User Area - InvalidScopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"try{",
									"    var jsonData = JSON.parse(responseBody).data;",
									"    tests[\"Area ID in response\"] = jsonData.extent === null;",
									"}",
									"catch(e) {tests[\"Body format error\"] = false; }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_INVALIDSCOPE}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "03 Get User Area List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        ",
									"        if(areas[i].gid == globals.UAID_EC){",
									"            found_SharedEC = true;",
									"        }",
									"        if(areas[i].gid == globals.UAID_Private){",
									"            found_Private = true;",
									"        }",
									"        if(areas[i].gid == globals.UAID_MULTIPLE){",
									"            found_Mscopes = true;",
									"        }",
									"        if(areas[i].gid == globals.UAID_INVALIDSCOPE){",
									"            found_InvalidScopes = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"Shared EC area in list\"] = found_SharedEC;",
									"    tests[\"Private in list\"] = !found_Private;",
									"    tests[\"Multiple Scopes in list\"] = found_Mscopes;",
									"    tests[\"Invalid scopes area in list\"] = !found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list"
					},
					"response": []
				},
				{
					"name": "03 Get User Area Group List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areaGroups = JSON.parse(responseBody).data;",
									"    ",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areaGroups.length; i++){",
									"        if(areaGroups[i] === globals.UAGROUP_EC){ found_SharedEC = true;   }",
									"        if(areaGroups[i] === globals.UAGROUP_Private){ found_Private = true;   }",
									"        if(areaGroups[i] === globals.UAGROUP_MULTIPLE){ found_Mscopes = true;   }",
									"        if(areaGroups[i] === globals.UAGROUP_INVALIDSCOPE){ found_InvalidScopes = true;   }",
									"    }",
									"    ",
									"    tests[\"User area group for SharedEC area in list \"] = found_SharedEC;",
									"    tests[\"User area group for Private area in list\"] = !found_Private;",
									"    tests[\"User area group for MultipleScopes area  in list\"] = found_Mscopes;",
									"    tests[\"User area group  for InvalidScopes area in list\"] = !found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/types"
					},
					"response": []
				},
				{
					"name": "03 Get Areas In Group - SharedEC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    var found = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].id == globals.UAID_EC){",
									"            found = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"User area in list\"] = found;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list/{{UAGROUP_EC}}"
					},
					"response": []
				},
				{
					"name": "03 Get Areas In Group - Private",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody).data;",
									"    ",
									"    var found = false;",
									"    for(i=0; i<jsonData.length;i++){",
									"        if(jsonData[i].id == globals.UAID_EC){",
									"            found = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"Area visible\"] = !found;",
									"    ",
									"}",
									"catch(e) {tests[\"Body format error\"] = false; }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list/{{UAGROUP_Private}}"
					},
					"response": []
				},
				{
					"name": "03 Get Areas In Group - MultipleS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code == 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    var found = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].id == globals.UAID_MULTIPLE){",
									"            found = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"User area in list\"] = found;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list/{{UAGROUP_MULTIPLE}}"
					},
					"response": []
				},
				{
					"name": "03 Get Areas In Group - InvalidS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody).data;",
									"    ",
									"    var found = false;",
									"    for(i=0; i<jsonData.length;i++){",
									"        if(jsonData[i].id == globals.UAID_EC){",
									"            found = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"Area visible\"] = !found;",
									"    ",
									"}",
									"catch(e) {tests[\"Body format error\"] = false; }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list/{{UAGROUP_INVALIDSCOPE}}"
					},
					"response": []
				},
				{
					"name": "03 Get User Areas Layer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data.idList;",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        ",
									"        if(areas[i] == globals.UAID_EC){",
									"            found_SharedEC = true;",
									"        }",
									"        if(areas[i] == globals.UAID_Private){",
									"            found_Private = true;",
									"        }",
									"        if(areas[i] == globals.UAID_MULTIPLE){",
									"            found_Mscopes = true;",
									"        }",
									"        if(areas[i] == globals.UAID_INVALIDSCOPE){",
									"            found_InvalidScopes = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"Shared EC area in list\"] = found_SharedEC;",
									"    tests[\"Private in list\"] = !found_Private;",
									"    tests[\"Multiple Scopes in list\"] = found_Mscopes;",
									"    tests[\"Invalid scopes area in list\"] = !found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/layers"
					},
					"response": []
				},
				{
					"name": "03 FilterAreasByProperty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    ",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].gid == globals.UAID_EC){ found_SharedEC = true;   }",
									"        if(areas[i].gid == globals.UAID_Private){ found_Private = true;   }",
									"        if(areas[i].gid == globals.UAID_MULTIPLE){ found_Mscopes = true;   }",
									"        if(areas[i].gid == globals.UAID_INVALIDSCOPE){ found_InvalidScopes = true;   }",
									"    }",
									"",
									"    tests[\"User area SharedEC in list \"] = found_SharedEC;",
									"    tests[\"User area Private in list\"] = !found_Private;",
									"    tests[\"User area MultipleScopes in list\"] = found_Mscopes;",
									"    tests[\"User area InvalidScopes in list\"] = !found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"filter\":\"name\"}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/byfilter"
					},
					"response": []
				},
				{
					"name": "03 FilterAreasByPoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    ",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].gid == globals.UAID_EC){ found_SharedEC = true;   }",
									"        if(areas[i].gid == globals.UAID_Private){ found_Private = true;   }",
									"        if(areas[i].gid == globals.UAID_MULTIPLE){ found_Mscopes = true;   }",
									"        if(areas[i].gid == globals.UAID_INVALIDSCOPE){ found_InvalidScopes = true;   }",
									"    }",
									"",
									"    tests[\"User area SharedEC in list \"] = found_SharedEC;",
									"    tests[\"User area Private in list\"] = !found_Private;",
									"    tests[\"User area MultipleScopes in list\"] = found_Mscopes;",
									"    tests[\"User area InvalidScopes in list\"] = !found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"areaType\":\"USERAREA\",\n\t\"isGeom\":false,\n\t\"longitude\":-988742.9570800774,\n\t\"latitude\":11696861.913622377,\n\t\"crs\":\"3857\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/area/details"
					},
					"response": []
				},
				{
					"name": "03 Edit User Area Dataset-SharedEC",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code == 500;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{UAID_EC}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "03 Edit User Area Dataset-Private",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code == 500;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{UAID_Private}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "03 Edit User Area Dataset-MultiScope",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code == 500;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{UAID_MULTIPLE}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "03 Edit User Area Dataset-InvalidScope",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code == 500;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{UAID_INVALIDSCOPE}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "03 Delete Area - SharedEC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code == 500;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/{{UAID_EC}}"
					},
					"response": []
				},
				{
					"name": "03 Delete Area - Private",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code == 500;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/{{UAID_Private}}"
					},
					"response": []
				},
				{
					"name": "03 Delete Area - MultiScpoe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code == 500;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/{{UAID_MULTIPLE}}"
					},
					"response": []
				},
				{
					"name": "03 Delete Area - InvalidScope",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code == 500;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_share_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/{{UAID_INVALIDSCOPE}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "04 Area-Visibility - SameUserChangeScope",
			"item": [
				{
					"name": "04 authenticate rep_power",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"authenticated is true\"] = data.authenticated === true;",
									"",
									"postman.setEnvironmentVariable(\"token\", data.jwtoken);",
									"",
									"tests[\"environment token is \" + environment.token] = environment.token === data.jwtoken;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"rep_power\",\n   \"password\": \"abcd-1234\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/authenticate"
					},
					"response": []
				},
				{
					"name": "04 Create User Area - SharedEC",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"UAID_EC\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"EC\"],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "04 Get User Area - SharedEC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"    postman.setGlobalVariable(\"UAGROUP_EC\", area.subType);",
									"    tests[\"Area scopeSelection correct\"] = area.scopeSelection[0] === \"EC\";",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_EC}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "04 Create User Area - Private",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"UAID_Private\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "04 Get User Area - Private",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"    ",
									"",
									"    postman.setGlobalVariable(\"UAGROUP_Private\", area.subType);",
									"    ",
									"    tests[\"Area scopeSelection correct\"] = (area.scopeSelection.length == 0);",
									"",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_Private}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "04 Create User Area - MultipleScopes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"UAID_MULTIPLE\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"EC\", \"DG_MARE\"],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "04 Get User Area - MultipleScopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"    ",
									"",
									"    postman.setGlobalVariable(\"UAGROUP_MULTIPLE\", area.subType);",
									"    ",
									"    tests[\"Area scopeSelection correct\"] = (area.scopeSelection.length == 2);",
									"",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_MULTIPLE}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "04 Create User Area - InvalidScope",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"id": "a46394f9-9b81-4b3d-8dcc-fc9f5679de2d",
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"UAID_INVALIDSCOPE\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "e7acca7d-47b0-44ae-9110-4c90d7ae1232",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"INVALIDSCOPE\", \"FRA\"],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "04 Get User Area - InvalidScopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"     tests[\"area\"] = area.id == globals.UAID_INVALIDSCOPE;",
									"     postman.setGlobalVariable(\"UAGROUP_INVALIDSCOPE\", area.subType);",
									"",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "133b70ae-b69e-48e1-8084-85fb5daef03f",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_INVALIDSCOPE}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "04 DG_Mare - Get User Area - SharedEC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"     tests[\"area\"] = area.id == globals.UAID_EC;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "69825738-ab7d-4682-8b25-0f18bc3e6c68",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_EC}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "04 DG_MARE - Get User Area - Private",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"     tests[\"area\"] = area.id == globals.UAID_Private;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "12eaa3c1-1049-4493-a4b8-287867349e74",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_Private}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "04 DG_MARE - Get User Area - MultipleScopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"   ",
									"    tests[\"Area scopeSelection correct\"] = (area.scopeSelection.length == 2);",
									"",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_MULTIPLE}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "04 DG_MARE - Get User Area - InvalidScopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"     tests[\"area\"] = area.id == globals.UAID_INVALIDSCOPE;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "3ca1f916-72f0-48af-8cd2-658e4ff66da6",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_INVALIDSCOPE}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "04 Get User Area List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        ",
									"        if(areas[i].gid == globals.UAID_EC){",
									"            found_SharedEC = true;",
									"        }",
									"        if(areas[i].gid == globals.UAID_Private){",
									"            found_Private = true;",
									"        }",
									"        if(areas[i].gid == globals.UAID_MULTIPLE){",
									"            found_Mscopes = true;",
									"        }",
									"        if(areas[i].gid == globals.UAID_INVALIDSCOPE){",
									"            found_InvalidScopes = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"Shared EC area in list\"] = found_SharedEC;",
									"    tests[\"Private in list\"] = found_Private;",
									"    tests[\"Multiple Scopes in list\"] = found_Mscopes;",
									"    tests[\"Invalid scopes area in list\"] = found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "601b6608-b54b-4812-8193-68ccd90c3c93",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list"
					},
					"response": []
				},
				{
					"name": "04 Get User Area Group List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areaGroups = JSON.parse(responseBody).data;",
									"    ",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areaGroups.length; i++){",
									"        if(areaGroups[i] === globals.UAGROUP_EC){ found_SharedEC = true;   }",
									"        if(areaGroups[i] === globals.UAGROUP_Private){ found_Private = true;   }",
									"        if(areaGroups[i] === globals.UAGROUP_MULTIPLE){ found_Mscopes = true;   }",
									"        if(areaGroups[i] === globals.UAGROUP_INVALIDSCOPE){ found_InvalidScopes = true;   }",
									"    }",
									"    ",
									"    tests[\"User area group for SharedEC area in list \"] = found_SharedEC;",
									"    tests[\"User area group for Private area in list\"] = found_Private;",
									"    tests[\"User area group for MultipleScopes area  in list\"] = found_Mscopes;",
									"    tests[\"User area group  for InvalidScopes area in list\"] = found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "3223fa35-7f72-464a-ba47-f2a08aa86c5e",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/types"
					},
					"response": []
				},
				{
					"name": "04 Get Areas In Group - SharedEC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    var found_SharedEC = false;",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].id == globals.UAID_EC){",
									"            found_SharedEC = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"Shared EC area in list\"] = found_SharedEC;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "976be609-0622-4ead-927b-1272ea8788af",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list/{{UAGROUP_EC}}"
					},
					"response": []
				},
				{
					"name": "04 Get Areas In Group - Private",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    var found_SharedEC = false;",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].id == globals.UAID_Private){",
									"            found_SharedEC = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"Shared EC area in list\"] = found_SharedEC;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "6a3735ce-e6e2-4053-8609-9ce28bbdbaea",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list/{{UAGROUP_Private}}"
					},
					"response": []
				},
				{
					"name": "04 Get Areas In Group - MultipleS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code == 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    var found = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].id == globals.UAID_MULTIPLE){",
									"            found = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"User area in list\"] = found;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list/{{UAGROUP_MULTIPLE}}"
					},
					"response": []
				},
				{
					"name": "04 Get Areas In Group - InvalidS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    var found_SharedEC = false;",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].id == globals.UAID_INVALIDSCOPE){",
									"            found_SharedEC = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"Shared EC area in list\"] = found_SharedEC;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "4a38d066-03b8-4bc4-8473-336caef58354",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list/{{UAGROUP_INVALIDSCOPE}}"
					},
					"response": []
				},
				{
					"name": "04 Get User Areas Layer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data.idList;",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        ",
									"        if(areas[i] == globals.UAID_EC){",
									"            found_SharedEC = true;",
									"        }",
									"        if(areas[i] == globals.UAID_Private){",
									"            found_Private = true;",
									"        }",
									"        if(areas[i] == globals.UAID_MULTIPLE){",
									"            found_Mscopes = true;",
									"        }",
									"        if(areas[i] == globals.UAID_INVALIDSCOPE){",
									"            found_InvalidScopes = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"Shared EC area in list\"] = found_SharedEC;",
									"    tests[\"Private in list\"] = found_Private;",
									"    tests[\"Multiple Scopes in list\"] = found_Mscopes;",
									"    tests[\"Invalid scopes area in list\"] = found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "a0841999-264e-47d1-998f-eb5058a190d3",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/layers"
					},
					"response": []
				},
				{
					"name": "04 FilterAreasByProperty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    ",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].gid == globals.UAID_EC){ found_SharedEC = true;   }",
									"        if(areas[i].gid == globals.UAID_Private){ found_Private = true;   }",
									"        if(areas[i].gid == globals.UAID_MULTIPLE){ found_Mscopes = true;   }",
									"        if(areas[i].gid == globals.UAID_INVALIDSCOPE){ found_InvalidScopes = true;   }",
									"    }",
									"",
									"    tests[\"User area SharedEC in list \"] = found_SharedEC;",
									"    tests[\"User area Private in list\"] = found_Private;",
									"    tests[\"User area MultipleScopes in list\"] = found_Mscopes;",
									"    tests[\"User area InvalidScopes in list\"] = found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "9202933a-5a19-4035-b6d1-35da4ef355e0",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"filter\":\"name\"}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/byfilter"
					},
					"response": []
				},
				{
					"name": "04 FilterAreasByPoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    ",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].gid == globals.UAID_EC){ found_SharedEC = true;   }",
									"        if(areas[i].gid == globals.UAID_Private){ found_Private = true;   }",
									"        if(areas[i].gid == globals.UAID_MULTIPLE){ found_Mscopes = true;   }",
									"        if(areas[i].gid == globals.UAID_INVALIDSCOPE){ found_InvalidScopes = true;   }",
									"    }",
									"",
									"    tests[\"User area SharedEC in list \"] = found_SharedEC;",
									"    tests[\"User area Private in list\"] = found_Private;",
									"    tests[\"User area MultipleScopes in list\"] = found_Mscopes;",
									"    tests[\"User area InvalidScopes in list\"] = found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "5cd5ca3e-5dd6-4cf8-91ec-475d765d07cb",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"areaType\":\"USERAREA\",\n\t\"isGeom\":false,\n\t\"longitude\":-988742.9570800774,\n\t\"latitude\":11696861.913622377,\n\t\"crs\":\"3857\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/area/details"
					},
					"response": []
				},
				{
					"name": "04 Edit User Area Dataset-SharedEC",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"id": "bd829639-e43e-4fac-b5b7-e187761342ae",
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "a4ca2cf0-6113-447d-aa5d-d43c26496606",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{UAID_EC}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "04 Edit User Area Dataset-Private",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"id": "5e554b45-fb41-4653-b5b6-c24dba9fcda8",
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "c7d73f72-dc3a-44b1-bd3d-52feb483f7a7",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{UAID_Private}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "04 Edit User Area Dataset-MultiScope",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{UAID_MULTIPLE}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "04 Edit User Area Dataset-InvalidScope",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"id": "3e742696-90f4-49e4-868d-e2f4d7ca65b0",
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "8b51e30d-f57a-4540-934a-fdfa06e5720b",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{UAID_INVALIDSCOPE}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "04 Delete Area - SharedEC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var res = JSON.parse(responseBody);",
									"    tests[\"JSON response\"] = res.code == 200;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "57a32fff-0cda-4e04-88f1-62a588962c11",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/{{UAID_EC}}"
					},
					"response": []
				},
				{
					"name": "04 Delete Area - Private",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var res = JSON.parse(responseBody);",
									"    tests[\"JSON response\"] = res.code == 200;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "af88dad2-9ca5-4f67-a79a-c8fc50ca61a2",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/{{UAID_Private}}"
					},
					"response": []
				},
				{
					"name": "04 Delete Area - MultiScpoe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var res = JSON.parse(responseBody);",
									"    tests[\"JSON response\"] = res.code == 200;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "b1412e64-4560-447b-a92f-fd0167763e33",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/{{UAID_MULTIPLE}}"
					},
					"response": []
				},
				{
					"name": "04 Delete Area - InvalidScope",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var res = JSON.parse(responseBody);",
									"    tests[\"JSON response\"] = res.code == 200;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "792bae52-c5bf-4d89-8a2a-090b92b0862d",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "DG_MARE"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/{{UAID_INVALIDSCOPE}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "05 Area-Visibility - SameUserSameScope",
			"item": [
				{
					"name": "05 authenticate rep_power",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"authenticated is true\"] = data.authenticated === true;",
									"",
									"postman.setEnvironmentVariable(\"token\", data.jwtoken);",
									"",
									"tests[\"environment token is \" + environment.token] = environment.token === data.jwtoken;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"rep_power\",\n   \"password\": \"abcd-1234\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/authenticate"
					},
					"response": []
				},
				{
					"name": "05 Create User Area - SharedEC",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"UAID_EC\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"EC\"],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "05 Get User Area - SharedEC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"    ",
									"",
									"    postman.setGlobalVariable(\"UAGROUP_EC\", area.subType);",
									"    ",
									"    tests[\"Area scopeSelection correct\"] = area.scopeSelection[0] === \"EC\";",
									"",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_EC}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "05 Create User Area - Private",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"UAID_Private\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "05 Get User Area - Private",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"    ",
									"",
									"    postman.setGlobalVariable(\"UAGROUP_Private\", area.subType);",
									"    ",
									"    tests[\"Area scopeSelection correct\"] = (area.scopeSelection.length == 0);",
									"",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_Private}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "05 Create User Area - MultipleScopes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"UAID_MULTIPLE\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"EC\", \"DG_MARE\"],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "05 Get User Area - MultipleScopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"    ",
									"",
									"    postman.setGlobalVariable(\"UAGROUP_MULTIPLE\", area.subType);",
									"    ",
									"    tests[\"Area scopeSelection correct\"] = (area.scopeSelection.length == 2);",
									"",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_MULTIPLE}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "05 Create User Area - InvalidScope",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    postman.setGlobalVariable(\"UAID_INVALIDSCOPE\", jsonData.data);",
									"",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.341753524316978, 68.12616370194141], [-37.28693406080001, 74.49036928060866], [-3.341753524316978, 74.908058702499], [-3.341753524316978, 68.12616370194141]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-{{myRnd}}\",\r\n\t\t\"description\": \"Description {{myRnd}}\",\r\n\t\t\"subType\": \"Group{{myRnd}}\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\": \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"INVALIDSCOPE\", \"FRA\"],\r\n\t\t\"datasetName\": \"dataset{{myRnd}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "05 Get User Area - InvalidScopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var area = JSON.parse(responseBody).data;",
									"     tests[\"area\"] = area.id == globals.UAID_INVALIDSCOPE;",
									"     postman.setGlobalVariable(\"UAGROUP_INVALIDSCOPE\", area.subType);",
									"",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "5e178d72-6a4a-42b5-8c3f-8c79e1fb5e41",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{UAID_INVALIDSCOPE}},\n\t\"isGeom\":false\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/details"
					},
					"response": []
				},
				{
					"name": "05 Get User Area List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        ",
									"        if(areas[i].gid == globals.UAID_EC){",
									"            found_SharedEC = true;",
									"        }",
									"        if(areas[i].gid == globals.UAID_Private){",
									"            found_Private = true;",
									"        }",
									"        if(areas[i].gid == globals.UAID_MULTIPLE){",
									"            found_Mscopes = true;",
									"        }",
									"        if(areas[i].gid == globals.UAID_INVALIDSCOPE){",
									"            found_InvalidScopes = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"Shared EC area in list\"] = found_SharedEC;",
									"    tests[\"Private in list\"] = found_Private;",
									"    tests[\"Multiple Scopes in list\"] = found_Mscopes;",
									"    tests[\"Invalid scopes area in list\"] = found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list"
					},
					"response": []
				},
				{
					"name": "05 Get User Area Group List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areaGroups = JSON.parse(responseBody).data;",
									"    ",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areaGroups.length; i++){",
									"        if(areaGroups[i] === globals.UAGROUP_EC){ found_SharedEC = true;   }",
									"        if(areaGroups[i] === globals.UAGROUP_Private){ found_Private = true;   }",
									"        if(areaGroups[i] === globals.UAGROUP_MULTIPLE){ found_Mscopes = true;   }",
									"        if(areaGroups[i] === globals.UAGROUP_INVALIDSCOPE){ found_InvalidScopes = true;   }",
									"    }",
									"    ",
									"    tests[\"User area group for SharedEC area in list \"] = found_SharedEC;",
									"    tests[\"User area group for Private area in list\"] = found_Private;",
									"    tests[\"User area group for MultipleScopes area  in list\"] = found_Mscopes;",
									"    tests[\"User area group  for InvalidScopes area in list\"] = found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/types"
					},
					"response": []
				},
				{
					"name": "05 Get Areas In Group - SharedEC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    var found = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].id == globals.UAID_EC){",
									"            found = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"User area in list\"] = found;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list/{{UAGROUP_EC}}"
					},
					"response": []
				},
				{
					"name": "05 Get Areas In Group - Private",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    var found = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].id == globals.UAID_Private){",
									"            found = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"User area in list\"] = found;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list/{{UAGROUP_Private}}"
					},
					"response": []
				},
				{
					"name": "05 Get Areas In Group - MultipleS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    var found = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].id == globals.UAID_MULTIPLE){",
									"            found = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"User area in list\"] = found;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list/{{UAGROUP_MULTIPLE}}"
					},
					"response": []
				},
				{
					"name": "05 Get Areas In Group - InvalidS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    var found = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].id == globals.UAID_INVALIDSCOPE){",
									"            found = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"User area in list\"] = found;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "5ac546d5-2359-429e-8907-acdf12552329",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/list/{{UAGROUP_INVALIDSCOPE}}"
					},
					"response": []
				},
				{
					"name": "05 Get User Areas Layer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data.idList;",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        ",
									"        if(areas[i] == globals.UAID_EC){",
									"            found_SharedEC = true;",
									"        }",
									"        if(areas[i] == globals.UAID_Private){",
									"            found_Private = true;",
									"        }",
									"        if(areas[i] == globals.UAID_MULTIPLE){",
									"            found_Mscopes = true;",
									"        }",
									"        if(areas[i] == globals.UAID_INVALIDSCOPE){",
									"            found_InvalidScopes = true;",
									"        }",
									"    }",
									"    ",
									"    tests[\"Shared EC area in list\"] = found_SharedEC;",
									"    tests[\"Private in list\"] = found_Private;",
									"    tests[\"Multiple Scopes in list\"] = found_Mscopes;",
									"    tests[\"Invalid scopes area in list\"] = found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/layers"
					},
					"response": []
				},
				{
					"name": "05 FilterAreasByProperty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    ",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].gid == globals.UAID_EC){ found_SharedEC = true;   }",
									"        if(areas[i].gid == globals.UAID_Private){ found_Private = true;   }",
									"        if(areas[i].gid == globals.UAID_MULTIPLE){ found_Mscopes = true;   }",
									"        if(areas[i].gid == globals.UAID_INVALIDSCOPE){ found_InvalidScopes = true;   }",
									"    }",
									"",
									"    tests[\"User area SharedEC in list \"] = found_SharedEC;",
									"    tests[\"User area Private in list\"] = found_Private;",
									"    tests[\"User area MultipleScopes in list\"] = found_Mscopes;",
									"    tests[\"User area InvalidScopes in list\"] = found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"filter\":\"name\"}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/byfilter"
					},
					"response": []
				},
				{
					"name": "05 FilterAreasByPoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var areas = JSON.parse(responseBody).data;",
									"    ",
									"    var found_SharedEC = false;",
									"    var found_Private = false;",
									"    var found_Mscopes = false;",
									"    var found_InvalidScopes = false;",
									"    ",
									"    for(var i=0; i<areas.length; i++){",
									"        if(areas[i].gid == globals.UAID_EC){ found_SharedEC = true;   }",
									"        if(areas[i].gid == globals.UAID_Private){ found_Private = true;   }",
									"        if(areas[i].gid == globals.UAID_MULTIPLE){ found_Mscopes = true;   }",
									"        if(areas[i].gid == globals.UAID_INVALIDSCOPE){ found_InvalidScopes = true;   }",
									"    }",
									"",
									"    tests[\"User area SharedEC in list \"] = found_SharedEC;",
									"    tests[\"User area Private in list\"] = found_Private;",
									"    tests[\"User area MultipleScopes in list\"] = found_Mscopes;",
									"    tests[\"User area InvalidScopes in list\"] = found_InvalidScopes;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"areaType\":\"USERAREA\",\n\t\"isGeom\":false,\n\t\"longitude\":-988742.9570800774,\n\t\"latitude\":11696861.913622377,\n\t\"crs\":\"3857\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/area/details"
					},
					"response": []
				},
				{
					"name": "05 Edit User Area Dataset-SharedEC",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{UAID_EC}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "05 Edit User Area Dataset-Private",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{UAID_Private}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "05 Edit User Area Dataset-MultiScope",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{UAID_MULTIPLE}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "05 Edit User Area Dataset-InvalidScope",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setGlobalVariable(\"myRnd\", Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;",
									"    ",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Feature\",\r\n\t\"geometry\": {\r\n\t\t\"type\": \"MultiPolygon\",\r\n\t\t\"coordinates\": [[[[-3.3418, 68.12619999999998], [-37.2869, 74.4904], [-3.3418, 74.90809999999999], [-3.3418, 68.12619999999998]]]]\r\n\t},\r\n\t\"properties\": {\r\n\t\t\"name\": \"Name-47751\",\r\n\t\t\"description\": \"Description 47751\",\r\n\t\t\"subType\": \"GROUP47751\",\r\n\t\t\"startDate\": \"2017-04-20T08:55:17\",\r\n\t\t\"endDate\"\r\n\t\t: \"2017-04-29T08:55:17\",\r\n\t\t\"scopeSelection\": [\"DG_MARE\"],\r\n\t\t\"datasetName\": \"newDataset{{myRnd}}\",\r\n\t\t\"id\": \"{{UAID_INVALIDSCOPE}}\"\r\n\t}\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea"
					},
					"response": []
				},
				{
					"name": "05 Delete Area - SharedEC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var res = JSON.parse(responseBody);",
									"    tests[\"JSON response\"] = res.code == 200;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "569a545a-3018-42a7-bbfb-964318957f59",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/{{UAID_EC}}"
					},
					"response": []
				},
				{
					"name": "05 Delete Area - Private",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var res = JSON.parse(responseBody);",
									"    tests[\"JSON response\"] = res.code == 200;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "5804b667-adf7-4778-a737-8109b1486415",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/{{UAID_Private}}"
					},
					"response": []
				},
				{
					"name": "05 Delete Area - MultiScpoe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var res = JSON.parse(responseBody);",
									"    tests[\"JSON response\"] = res.code == 200;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "515aab9e-61fc-4637-aca0-d6fd211fa285",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/{{UAID_MULTIPLE}}"
					},
					"response": []
				},
				{
					"name": "05 Delete Area - InvalidScope",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"try{",
									"    var res = JSON.parse(responseBody);",
									"    tests[\"JSON response\"] = res.code == 200;",
									"}catch(e){",
									"    tests[\"JSON format\"] = false;",
									"}"
								],
								"id": "253d7f2b-3b73-44d1-8970-02b164f1b0f0",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "EC"
							},
							{
								"key": "roleName",
								"value": "rep_power_role"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/spatial/rest/userarea/{{UAID_INVALIDSCOPE}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "06 User Rights Cleanup",
			"item": [
				{
					"name": "authenticate usm_admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"authenticated is true\"] = data.authenticated === true;",
									"",
									"postman.setEnvironmentVariable(\"token\", data.jwtoken);",
									"",
									"tests[\"environment token is \" + environment.token] = environment.token === data.jwtoken;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"usm_admin\",\n   \"password\": \"password\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/authenticate"
					},
					"response": []
				},
				{
					"name": "get roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody).results;",
									"",
									"",
									"for (var i = 0; i < data.length; i++) {",
									"    var feature = data[i];",
									"    ",
									"    if (feature.name === 'rep_power_role') {",
									"        postman.setGlobalVariable(\"rep_power_role_id\", feature.roleId);",
									"        ",
									"    } else if (feature.name === 'rep_share_role') {",
									"        postman.setGlobalVariable(\"rep_share_role_id\", feature.roleId);",
									"        ",
									"    } else if (feature.name === 'rep_private_role') {",
									"        postman.setGlobalVariable(\"rep_private_role_id\", feature.roleId);",
									"    }",
									"}",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body contains results\"] = responseBody.has(\"results\");",
									"tests[\"Response contains active users\"] = responseBody.has(\"activeUsers\");",
									"tests[\"Response contains roles ids\"] = responseBody.has(\"roleId\");",
									"tests[\"Response contains update features attribute\"] = responseBody.has(\"updateFeatures\");",
									"tests[\"Response contains features attribute\"] = responseBody.has(\"features\");",
									"tests[\"Response contains roles description\"] = responseBody.has(\"description\");",
									"tests[\"Response contains status of the roles\"] = responseBody.has(\"status\");",
									"tests[\"Response contains names of the roles\"] = responseBody.has(\"name\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "roleName",
								"value": "USM-UserManager"
							},
							{
								"key": "scopeName",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"rep_share\",\n   \"password\": \"abcd-1234\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/roles"
					},
					"response": []
				},
				{
					"name": "get scopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody).results;",
									"",
									"for (var i = 0; i < data.length; i++) {",
									"    var scope = data[i];",
									"",
									"    if(scope.name === 'EC'){",
									"        postman.setGlobalVariable(\"EC_SCOPE_ID\", scope.scopeId);",
									"        postman.setGlobalVariable(\"EC_ACTIVE_FROM\", scope.activeFrom);",
									"        postman.setGlobalVariable(\"EC_ACTIVE_TO\", scope.activeTo);",
									"        ",
									"    }",
									"    if(scope.name === \"DG_MARE\"){",
									"        postman.setGlobalVariable(\"DG_MARE_SCOPE_ID\", scope.scopeId);",
									"        postman.setGlobalVariable(\"DG_MARE_ACTIVE_FROM\", scope.activeFrom);",
									"        postman.setGlobalVariable(\"DG_MARE_ACTIVE_TO\", scope.activeTo);",
									"    }",
									"}",
									"",
									"tests[\"Response contains results\"] = responseBody.has(\"results\");",
									"",
									"tests[\"Response contains active users\"] = responseBody.has(\"activeUsers\");",
									"tests[\"Response contains active from date\"] = responseBody.has(\"activeFrom\");",
									"tests[\"Response contains active to date\"] = responseBody.has(\"activeTo\");",
									"tests[\"Response contains access to data from date\"] = responseBody.has(\"dataFrom\");",
									"tests[\"Response contains access to data to date\"] = responseBody.has(\"dataTo\");",
									"tests[\"Response contains update datasets attribute\"] = responseBody.has(\"updateDatasets\");",
									"tests[\"Response contains datasets attribute\"] = responseBody.has(\"dataSets\");",
									"tests[\"Response contains scope id's\"] = responseBody.has(\"scopeId\");",
									"tests[\"Response contains status attribute\"] = responseBody.has(\"status\");",
									"tests[\"Response contains scope names\"] = responseBody.has(\"name\");",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "roleName",
								"value": "USM-UserManager"
							},
							{
								"key": "scopeName",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"rep_share\",\n   \"password\": \"abcd-1234\"\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/scopes"
					},
					"response": []
				},
				{
					"name": "edit_EC_datasets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody).results;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Response contains active users\"] = responseBody.has(\"activeUsers\");",
									"tests[\"Response contains active from date\"] = responseBody.has(\"activeFrom\");",
									"tests[\"Response contains active to date\"] = responseBody.has(\"activeTo\");",
									"tests[\"Response contains access to data from date\"] = responseBody.has(\"dataFrom\");",
									"tests[\"Response contains access to data to date\"] = responseBody.has(\"dataTo\");",
									"tests[\"Response contains update datasets attribute\"] = responseBody.has(\"updateDatasets\");",
									"tests[\"Response contains datasets attribute\"] = responseBody.has(\"dataSets\");",
									"tests[\"Response contains scope id's\"] = responseBody.has(\"scopeId\");",
									"tests[\"Response contains status attribute\"] = responseBody.has(\"status\");",
									"tests[\"Response contains scope names\"] = responseBody.has(\"name\");",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "roleName",
								"value": "USM-UserManager"
							},
							{
								"key": "scopeName",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"updateDatasets\": true,\r\n\t\"status\": \"E\",\r\n\t\"name\": \"EC\",\r\n\t\"activeFrom\": \"{{EC_ACTIVE_FROM}}\",\r\n\t\"activeTo\": \"{{EC_ACTIVE_TO}}\",\r\n\t\"scopeId\": {{EC_SCOPE_ID}},\r\n\t\"dataSets\": [34, 18, 29, 33, 14, 47, 50, 41, 38, 8, 26, 30, 52, 48, 51, 3, 46, 7, 42, 100007, 9, 36, 35, 45, 37, 100002, 6, 28, 11, 16, 22, 39, 17, 15, 10, 27, 0, 13, 100008, 32, 20, 19, 31, 44, 43, 25, 49, 4, 24, 5, 1, 2, 23, 40, 100009, 12, 21, 100005, 100011, 100006, 100001, 100010, 100013, 100004, 100000, 100003, 100014, 100012]\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/scopes"
					},
					"response": []
				},
				{
					"name": "edit_DG_MARE_datasets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody).results;",
									"tests[\"Response contains active users\"] = responseBody.has(\"activeUsers\");",
									"tests[\"Response contains active from date\"] = responseBody.has(\"activeFrom\");",
									"tests[\"Response contains active to date\"] = responseBody.has(\"activeTo\");",
									"tests[\"Response contains access to data from date\"] = responseBody.has(\"dataFrom\");",
									"tests[\"Response contains access to data to date\"] = responseBody.has(\"dataTo\");",
									"tests[\"Response contains update datasets attribute\"] = responseBody.has(\"updateDatasets\");",
									"tests[\"Response contains datasets attribute\"] = responseBody.has(\"dataSets\");",
									"tests[\"Response contains scope id's\"] = responseBody.has(\"scopeId\");",
									"tests[\"Response contains status attribute\"] = responseBody.has(\"status\");",
									"tests[\"Response contains scope names\"] = responseBody.has(\"name\");",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							},
							{
								"key": "roleName",
								"value": "USM-UserManager"
							},
							{
								"key": "scopeName",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"updateDatasets\": true,\r\n\t\"status\": \"E\",\r\n\t\"name\": \"EC\",\r\n\t\"activeFrom\": \"{{EC_ACTIVE_FROM}}\",\r\n\t\"activeTo\": \"{{EC_ACTIVE_TO}}\",\r\n\t\"scopeId\": {{EC_SCOPE_ID}},\r\n\t\"dataSets\": [34, 18, 29, 33, 14, 47, 50, 41, 38, 8, 26, 30, 52, 48, 51, 3, 46, 7, 42, 100007, 9, 36, 35, 45, 37, 100002, 6, 28, 11, 16, 22, 39, 17, 15, 10, 27, 0, 13, 100008, 32, 20, 19, 31, 44, 43, 25, 49, 4, 24, 5, 1, 2, 23, 40, 100009, 12, 21, 100005, 100011, 100006, 100001, 100010, 100013, 100004, 100000, 100003, 100014, 100012]\r\n}"
						},
						"url": "{{hostname}}:{{port}}/{{comPath}}/usm-administration/rest/scopes"
					},
					"response": []
				}
			]
		}
	]
}