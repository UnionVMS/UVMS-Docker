<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>fish.focus.maven</groupId>
		<artifactId>focus-pom</artifactId>
		<version>1.5</version>
		<relativePath />
	</parent>

	<groupId>eu.europa.ec.fisheries.uvms.docker</groupId>
	<version>3.4.0-SNAPSHOT</version>
	<artifactId>uvms-release-test</artifactId>
	<packaging>jar</packaging>
	<name>uvms-release-test</name>
	<dependencies>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.1.1.jre7</version>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.docker</groupId>
			<artifactId>uvms-docker-images</artifactId>
			<version>3.4.0-SNAPSHOT</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<artifactId>movement-model</artifactId>
			<groupId>eu.europa.ec.fisheries.uvms.movement</groupId>
			<version>3.0.6</version>
			<classifier>date</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-client</artifactId>
			<version>5.13.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>mobileterminal-model</artifactId>
			<groupId>eu.europa.ec.fisheries.uvms.mobileterminal</groupId>
			<version>3.0.4</version>
			<classifier>date</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.asset</groupId>
			<artifactId>asset-model</artifactId>
			<version>3.0.5</version>
			<classifier>date</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.user</groupId>
			<artifactId>user-model</artifactId>
			<version>2.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.config</groupId>
			<artifactId>config-model</artifactId>
			<version>3.0.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.audit</groupId>
			<artifactId>audit-model</artifactId>
			<version>3.0.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.reporting</groupId>
			<artifactId>reporting-model</artifactId>
			<version>0.5.6.presweden</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.reporting</groupId>
			<artifactId>service</artifactId>
			<version>0.5.7.presweden1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>fluent-hc</artifactId>
			<version>4.5.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.8.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.8.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.databene</groupId>
			<artifactId>contiperf</artifactId>
			<version>2.3.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-client</artifactId>
			<version>3.1.10</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.21.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>validate</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<artifactId>movement-rest</artifactId>
									<groupId>eu.europa.ec.fisheries.uvms.movement</groupId>
									<type>war</type>
									<version>3.0.5</version>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/warclasses/</outputDirectory>
									<includes>WEB-INF/classes/**</includes>
								</artifactItem>
							</artifactItems>
							<includes>**/*.java</includes>
							<excludes>**/*.properties</excludes>
							<outputDirectory>${project.build.directory}/wars</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/classes/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}/warclasses/WEB-INF/classes/</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.20</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>downloadMonitoringMetrics</id>
						<phase>post-integration-test</phase>
						<configuration>
							<tasks>
								<get src="http://localhost:28080/movement/monitoring?format=pdf"
									dest="target/movement_monitoring.pdf" verbose="true"
									usetimestamp="true" />
								<get
									src="http://localhost:28080/mobileterminal/monitoring?format=pdf"
									dest="target/mobileterminal_monitoring.pdf" verbose="true"
									usetimestamp="true" />
								<!-- <get
									src="http://localhost:28080/asset/monitoring?format=pdf"
									dest="target/asset_monitoring.pdf" verbose="true"
									usetimestamp="true" />-->
									
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>verifyallstopped</id>
						<phase>compile</phase>
						<goals>
							<goal>stop</goal>
						</goals>
						<configuration>
							<allContainers>true</allContainers>
						</configuration>
					</execution>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
						<configuration>
							<allContainers>true</allContainers>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<images>
						<image>
							<alias>activemq</alias>
							<name>uvms/activemq:${project.version}</name>
							<run>
								<net>bridge</net>
								<namingStrategy>none</namingStrategy>
								<ports>
									<port>18161:8161</port>
									<port>61616:61616</port>
								</ports>
								<!--<wait>
									<log>database system is ready to accept connections</log>
									<tcp>
										<host>127.0.0.1</host>
										<ports>
											<port>8161</port>
										</ports>
									</tcp>
									<kill>15000</kill>
									<shutdown>15000</shutdown>
									<time>15000</time>
								</wait>-->
								<log>
									<enabled>true</enabled>
									<color>red</color>
								</log>
								<hostname>activemq</hostname>
							</run>
						</image>
						<image>
							<alias>postgres</alias>
							<name>uvms/postgres-release:${project.version}</name>
							<run>
								<net>bridge</net>
								<namingStrategy>none</namingStrategy>
								<ports>
									<port>25432:5432</port>
								</ports>
								<wait>
									<log>All uvms databases created</log>
									<time>240000</time>
									<kill>15000</kill>
									<shutdown>15000</shutdown>
								</wait>
								<dependsOn>
									<container>activemq</container>
								</dependsOn>
								<links>
									<link>activemq:activemq</link>
								</links>
								<log>
									<enabled>true</enabled>
									<color>green</color>
								</log>
								<hostname>postgres</hostname>
							</run>
						</image>
						<image>
							<alias>wildfly</alias>
							<name>uvms/wildfly-release:${project.version}</name>
							<run>
								<net>bridge</net>
								<namingStrategy>none</namingStrategy>
								<links>
									<link>postgres:postgres</link>
									<link>activemq:activemq</link>
								</links>
								<ports>
									<port>29990:9990</port>
									<port>28787:8787</port>
									<port>28080:8080</port>
								</ports>
								<!--<wait>
									<http>
										<url>http://localhost:28080/geoserver/index.html</url>
										<method>GET</method>
										<status>200</status>
									</http>
									<time>300000</time>
									<kill>15000</kill>
									<shutdown>15000</shutdown>
								</wait>-->
								<cmd>
									<shell>/opt/jboss/start.sh /opt/jboss/wildfly/bin/standalone.sh
										-c standalone-uvms.xml -b 0.0.0.0 -bmanagement 0.0.0.0</shell>
								</cmd>
								<dependsOn>
									<container>postgres</container>
									<container>activemq</container>
								</dependsOn>
								<volumes>
									<bind>
										<volume>${dockler.volume.app.logs}:/app/logs</volume>
										<volume>${dockler.volume.server.logs}:/opt/jboss/wildfly/standalone/log</volume>
									</bind>
								</volumes>
								<log>
									<enabled>true</enabled>
									<color>blue</color>
								</log>
								<hostname>wildfly</hostname>
							</run>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>focus-repo</id>
			<name>Focus nexus repository</name>
			<url>http://nexus.focus.fish/nexus/repository/public/</url>
		</repository>
	</repositories>
	<profiles>
		<profile>
			<id>frontend-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.6.0</version>
						<executions>
							<execution>
								<id>python-build</id>
								<phase>integration-test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<executable>python3</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
							<arguments>
								<argument>Python-regression-suite-selenium.py</argument>
							</arguments>
							<successCodes>
								<successCode>0</successCode>
								<successCode>1</successCode>
								<successCode>2</successCode>
							</successCodes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>dev-windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<dockler.volume.app.logs>c:\app\logs</dockler.volume.app.logs>
				<dockler.volume.server.logs>c:\opt\jboss\wildfly\standalone\log</dockler.volume.server.logs>				
			</properties>
		</profile>
		<profile>
			<id>dev-mac</id>
			<activation>
				<os>
					<family>mac</family>
				</os>
			</activation>
			<properties>
				<dockler.volume.app.logs>/app/logs/</dockler.volume.app.logs>
				<dockler.volume.server.logs>/opt/jboss/wildfly/standalone/log</dockler.volume.server.logs>				
			</properties>
		</profile>
		<profile>
			<id>dev-linux</id>
			<activation>
				<os>
					<name>linux</name>
				</os>
			</activation>
			<properties>
				<dockler.volume.app.logs>/app/logs/</dockler.volume.app.logs>
				<dockler.volume.server.logs>/opt/jboss/wildfly/standalone/log</dockler.volume.server.logs>				
			</properties>
		</profile>
	</profiles>
</project>