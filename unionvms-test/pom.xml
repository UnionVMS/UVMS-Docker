<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>eu.europa.ec.fisheries.uvms.docker</groupId>
		<artifactId>uvms-docker</artifactId>
		<version>3.40.12.w18-ERS-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	
	<artifactId>uvms-unionvms-test</artifactId>
	<packaging>jar</packaging>
	<name>uvms-unionvms-test</name>

	<properties>
		<docker.skip>${skipITs}</docker.skip>
		<docker.frontend.test.suite>UnionVMSTestCase</docker.frontend.test.suite>
	</properties>

	<dependencies>
		<dependency>
			<artifactId>movement-model</artifactId>
			<groupId>eu.europa.ec.fisheries.uvms.movement</groupId>
			<version>${unionvms.project.movement.module}</version>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.movement-rules</groupId>
			<artifactId>movement-rules-model</artifactId>
			<version>${unionvms.project.movementrules.module}</version>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.activity</groupId>
			<artifactId>client-model</artifactId>
			<version>${unionvms.project.activity.module}</version>
			<exclusions>
				<exclusion>
					<groupId>eu.europa.ec.fisheries.uvms.activity</groupId>
					<artifactId>activity-model</artifactId>
				</exclusion>
				<exclusion>
					<groupId>eu.europa.ec.fisheries.uvms.commons</groupId>
					<artifactId>uvms-commons-rest</artifactId>
				</exclusion>
				<exclusion>
					<groupId>eu.europa.ec.fisheries.uvms.commons</groupId>
					<artifactId>uvms-commons-date</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.projectlombok</groupId>
					<artifactId>lombok</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>artemis-jms-client-all</artifactId>
			<version>2.6.3</version>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.exchange</groupId>
			<artifactId>exchange-model</artifactId>
			<version>${unionvms.project.exchange.module}</version>
		</dependency>		
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.asset</groupId>
			<artifactId>asset-model</artifactId>
			<version>${unionvms.project.asset.module}</version>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.asset</groupId>
			<artifactId>asset-client</artifactId>
			<version>${unionvms.project.asset.module}</version>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.user</groupId>
			<artifactId>user-model</artifactId>
			<version>${unionvms.project.user.module}</version>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.reporting</groupId>
			<artifactId>reporting-service</artifactId>
			<version>${unionvms.project.reporting.module}</version>
			<exclusions>
				<exclusion>
					<groupId>javax</groupId>
					<artifactId>javaee-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.projectlombok</groupId>
					<artifactId>lombok</artifactId>
				</exclusion>
				<exclusion>
					<groupId>fish.focus.uvms.maven</groupId>
					<artifactId>uvms-pom-test-deps</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.config</groupId>
			<artifactId>config-model</artifactId>
			<version>${unionvms.project.config.module}</version>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.audit</groupId>
			<artifactId>audit-model</artifactId>
			<version>${unionvms.project.audit.module}</version>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.fisheries.uvms.spatial</groupId>
			<artifactId>spatial-model</artifactId>
			<version>1.0.12</version>
		</dependency>
		<dependency>
            <groupId>eu.europa.ec.fisheries.uvms.service.client.flux</groupId>
            <artifactId>flux-movement</artifactId>
            <version>2.0.1</version>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.fisheries.uvms.service.client</groupId>
            <artifactId>connector-bridge-client</artifactId>
            <version>2.0.1</version>
        </dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>		
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.10</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jaxb-annotations</artifactId>
			<version>2.9.10</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.9.10</version>
		</dependency>
		<dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.9.10</version>
        </dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-client</artifactId>
			<version>3.9.0.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson2-provider</artifactId>
			<version>3.9.0.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.databene</groupId>
			<artifactId>contiperf</artifactId>
			<version>2.4.4</version>			
		</dependency>
		<dependency>
			<groupId>com.peertopark.java</groupId>
			<artifactId>geocalc</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
		    <groupId>org.eclipse.jetty</groupId>
		    <artifactId>jetty-servlet</artifactId>
		    <version>9.4.19.v20190610</version>
		</dependency>

		<dependency>
			<groupId>fish.focus.uvms.maven</groupId>
			<artifactId>uvms-pom-java11-deps</artifactId>
			<version>2.4</version>
			<type>pom</type>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.25.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <version>3.3.4</version>
                <executions>
                    <execution>
                        <id>wsdl-services</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>${basedir}/src/main/wsdl/FluxMessageReceiverBean.wsdl</wsdl>
                                    <serviceName>MovementService</serviceName>
                                    <bindingFiles>
                                        <bindingFile>${basedir}/src/main/wsdl/binding.xml</bindingFile>
                                    </bindingFiles>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>downloadRegressionSuite</id>
						<phase>test</phase>
						<configuration>
							<skip>${docker.skip}</skip>
							<tasks>
								<!-- Get the regression-suite-selenium front-end -->
								<get src="https://github.com/UnionVMS/UVMS-SeleniumTests/raw/swe-dev/UVMS-SeleniumRegressionTests.zip" dest="target/UVMS-SeleniumRegressionTests.zip" verbose="true" usetimestamp="true" />
								<unzip src="target/UVMS-SeleniumRegressionTests.zip" dest="target/" />
								<move file="target/DockerUnionVMSparameters.py" tofile="target/UnionVMSparameters.py" />
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>downloadMonitoringMetrics</id>
						<phase>post-integration-test</phase>
						<configuration>
							<skip>${docker.skip}</skip>
							<tasks>
								<get src="http://localhost:28080/unionvms/audit/monitoring?format=pdf" dest="target/audit_monitoring.pdf" verbose="true" usetimestamp="true" />
								<get src="http://localhost:28080/unionvms/config/monitoring?format=pdf" dest="target/config_monitoring.pdf" verbose="true" usetimestamp="true" />
								<get src="http://localhost:28080/unionvms/exchange/monitoring?format=pdf" dest="target/exchange_monitoring.pdf" verbose="true" usetimestamp="true" />
								<get src="http://localhost:28080/unionvms/spatial/monitoring?format=pdf" dest="target/spatial_monitoring.pdf" verbose="true" usetimestamp="true" />
								<get src="http://localhost:28080/unionvms/asset/monitoring?format=pdf" dest="target/asset_monitoring.pdf" verbose="true" usetimestamp="true" />
								<get src="http://localhost:28080/unionvms/movement/monitoring?format=pdf" dest="target/movement_monitoring.pdf" verbose="true" usetimestamp="true" />
								<get src="http://localhost:28080/unionvms/user/monitoring?format=pdf" dest="target/user_monitoring.pdf" verbose="true" usetimestamp="true" />
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>verifyallstopped</id>
						<phase>validate</phase>
						<goals>
							<goal>stop</goal>
						</goals>
						<configuration>
							<allContainers>true</allContainers>
						</configuration>
					</execution>
					<execution>
						<id>start</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
						<configuration>
							<allContainers>true</allContainers>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<skip>${docker.skip}</skip>
					<images>
						<image>
							<alias>postgres</alias>
							<name>uvms/postgres-release:${project.version}</name>
							<run>
								<net>bridge</net>
								<namingStrategy>none</namingStrategy>
								<ports>
									<port>25432:5432</port>
								</ports>
								<wait>
									<log>All uvms databases created</log>
									<time>480000</time>
									<kill>15000</kill>
									<shutdown>15000</shutdown>
								</wait>
								<log>
									<enabled>true</enabled>
									<color>green</color>
								</log>
								<hostname>postgres</hostname>
							</run>
						</image>
						<image>
							<alias>wildfly</alias>
							<name>uvms/wildfly-unionvms:${project.version}</name>
							<run>
								<net>bridge</net>
								<namingStrategy>none</namingStrategy>
								<links>
									<link>postgres:postgres</link>
								</links>
								<ports>
									<port>29990:9990</port>
									<port>28787:8787</port>
									<port>28080:8080</port>
									<port>28443:8443</port>
									<port>5445:5445</port>
									<port>5455:5455</port>
								</ports>
								<wait>
									<http>
										<url>http://admin:Wildfly4ever!@localhost:29990/management</url>
										<method>GET</method>
										<status>200</status>
									</http>
									<time>900000</time>
									<kill>15000</kill>
									<shutdown>15000</shutdown>
								</wait>
								<cmd>
									<shell>/opt/jboss/start.sh /opt/jboss/wildfly/bin/standalone.sh
										-c standalone-uvms.xml -b 0.0.0.0 -bmanagement 0.0.0.0 --debug</shell>
								</cmd>
								<dependsOn>
									<container>postgres</container>
								</dependsOn>
								<volumes>
									<bind>
										<volume>${docker.volume.app.logs}:/app/logs</volume>
										<volume>${docker.volume.server.logs}:/opt/jboss/wildfly/standalone/log</volume>
									</bind>
								</volumes>
								<log>
									<enabled>true</enabled>
									<color>blue</color>
								</log>
								<hostname>wildfly</hostname>
							</run>
						</image>
					</images>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.4.1</version>
				<executions>
					<execution>
						<id>enforce-jdk-bytecode-version</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
							<rules>
								<enforceBytecodeVersion>
									<maxJdkVersion>1.9</maxJdkVersion>
								</enforceBytecodeVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>focus-repo</id>
			<name>Focus nexus repository</name>
			<url>http://nexus.focus.fish/nexus/repository/public/</url>
		</repository>
	</repositories>
	<profiles>
		<profile>
			<id>frontend-test-rules</id>
			<properties>
				<docker.frontend.test.suite>UnionVMSTestCaseRules</docker.frontend.test.suite>
			</properties>
		</profile>
		<profile>
			<id>frontend-test-filtering</id>
			<properties>
				<docker.frontend.test.suite>UnionVMSTestCaseFiltering</docker.frontend.test.suite>
			</properties>
		</profile>
		<profile>
			<id>frontend-test-mtchannels</id>
			<properties>
				<docker.frontend.test.suite>UnionVMSTestCaseMobileTerminalChannels</docker.frontend.test.suite>
			</properties>
		</profile>
		<profile>
			<id>frontend-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>python-build</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>									
										<exec dir="${project.basedir}/target/" executable="${python.runtime}">
										 	<redirector output="target/Python-regression-suite-selenium.log" alwayslog="true" /> 
											<arg value="-u" />
											<arg value="-m" />
											<arg value="unittest" />
											<arg value="-v" />
											<arg value="Python-regression-suite-selenium.${docker.frontend.test.suite}" />
									  </exec>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>postman-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.6.0</version>
						<executions>
							<execution>
								<id>postman-test2</id>
								<phase>integration-test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>newman</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>run</argument>
										<argument>${project.basedir}${file.separator}src${file.separator}test${file.separator}resources${file.separator}SpatialIntegrationTest.postman_collection.json</argument>
										<argument>--environment</argument>
										<argument>${project.basedir}${file.separator}src${file.separator}test${file.separator}resources${file.separator}test_environment</argument>
										<argument>--color</argument>
										<argument>--reporters</argument>
										<argument>junit,cli,html</argument>
										<argument>--reporter-junit-export</argument>
										<argument>${project.basedir}${file.separator}target${file.separator}failsafe-reports${file.separator}SpatialIntegrationTest.xml</argument>
										<argument>--reporter-html-export</argument>
										<argument>${project.basedir}${file.separator}target${file.separator}failsafe-reports${file.separator}SpatialIntegrationTest.html</argument>
									</arguments>
									<successCodes>
										<successCode>0</successCode>
										<successCode>1</successCode>
										<successCode>2</successCode>
									</successCodes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
